# makes a comment, you can only comment whole lines. all config values consis of a keyword
# followed by the list of args, all space separated; usage of multiple spaces is fine.
# if you need spaces in an argument use double quotes as in "argument with spaces"
# note: if you need to use double quotes inside then escape them by using \".
# if you need to use \ escape it by using \\ e.g. if you need to interpolate strings
#   keybind alt r "echo \"my home is $HOME\""
# you are highly advised to use scripts for more complicated actions

# .-------------.
# | ENVIRONMENT |
# '-------------'
# you can add env variables with env <name> <value>
env EDITOR nvim
env BROWSER firefox

# recommended to have set
env XDG_CURRENT_DESKTOP notwc
env XDG_SESSION_DESKTOP notwc
env XDG_SESSION_TYPE wayland

# qt stuff
env QT_QPA_PLATFORM wayland
env QT_WAYLAND_DISABLE_WINDOWDECORATION 1
env QT_STYLE_OVERRIDE kvantum 
env QT_AUTO_SCREEN_SCALE_FACTOR 1

# some apps use these environment variables to set up their cursors
env XCURSOR_SIZE 24
env XCURSOR_THEME Bibata-Modern-Ice

# .--------------.
# | RUN ON START |
# '--------------'
# run runs its argument on startup; see the usage of double quotes
run "gsettings set org.gnome.desktop.interface cursor-theme Bibata-Modern-Ice"

# this starts xdg-desktop-portals in the right order so things like screensharing work
run "$HOME/scripts/fix-portals.sh"

# other apps you want on startup
run "waybar -c $HOME/.config/waybar/notwc-config.jsonc -s $HOME/.config/waybar/notwc-style.css"
run swww-daemon
run dunst
run "$HOME/scripts/check_battery.sh"

# .---------.
# | OUTPUTS |
# '---------'
# you should specify the placement of your outputs as 
# output <name> <x> <y> <width> <height> <refresh_rate> <scale>
# where x, y are coordinates in the layout and scale is optional (defaults to 1)
# for example, this config places HDMI-A-1 to the left of eDP-1
# to find the names run notwc and read the logs
output HDMI-A-1 0    0 1920 1080 60
output eDP-1    1920 0 1920 1080 60

# .-----------.
# | KEYBOARDS |
# '-----------'
# specify the keymaps you want to use and what variation of it you want to use.
# you need to use empty quotes for default options.
keymap us ""
keymap rs ""
keymap rs latinunicodeyz
# keymap_options should be comma separated list of xkb options
keymap_options "grp:alt_space_toggle,compose:menu"

keyboard_rate 30
keyboard_delay 200

# .----------.
# | POINTERS |
# '----------'
# you need to explicitly enable things you want. keep in mind that any of these
# options might fail if your pointer device does not support it.

# how sensitive you pointer (mouse, trackpad) should be. in range [-1.0, 1.0]:
# 0 is the default, -1.0 slowest, 1.0 fastest
pointer_sensitivity 0
# wheather or not to apply pointer acceleration
pointer_acceleration 0
# you can override these values per device if needed with
# pointer <name> <acceleration> <sensitivity>
# to find the name of the specific device run
# sudo libinput list-devices | grep -i "device"
pointer "ELAN0771:00 04F3:3245 Touchpad" 1 0.3
# set to 1 if you want to invert clicks. note that this option is device specific
pointer_left_handed 0

# .-----------.
# | TRACKPADS |
# '-----------'
# wheater or not to disable a trackpad while typing
trackpad_disable_while_typing 0
# enable natural scroll for trackpads; also availabe as `natural_scroll` for backwards compatibility
trackpad_natural_scroll 1
# enable tap to click for trackpads; also availabe as `tap_to_click` for backwards compatibility
trackpad_tap_to_click 1
# one of 'no_scroll', 'two_fingers', 'edge' or 'on_button_down'
trackpad_scroll_method two_fingers

# .--------.
# | CURSOR |
# '--------'
cursor_theme Bibata-Modern-Ice
cursor_size 24

# .------------.
# | WORKSPACES |
# '------------'
# you should specify where to place workspaces with
# workspace <index> <output_name>
# not doing so will give you just one workspace per monitor. index is not that important,
# you dont have to write them seqentially, but be sure to use the same ones for keybinds, see under
workspace 1 HDMI-A-1
workspace 2 HDMI-A-1
workspace 3 HDMI-A-1
workspace 4 HDMI-A-1
workspace 5 HDMI-A-1

# i put number 10 first so it is primary when my external monitor is not connected
workspace 10 eDP-1
workspace 9 eDP-1
workspace 8 eDP-1
workspace 7 eDP-1
workspace 6 eDP-1

# .----------------------.
# | TOPLEVELS AND LAYOUT |
# '----------------------'
# some toplevels dont have the min size, so you can force that behaviour here; recommended to keep at least at 1
min_toplevel_size 10
# whether of not to use client side decorations; default is no client side decorations
client_side_decorations 0

# self explanatory
outer_gaps 12
inner_gaps 6
border_width 2
# you should not use this option if you use client_side_decorations. there is no reliable way to handle titlebars.
# thats a issue in core wayland - all the things that are not the main window are so called subsurfaces and only
# guesses could be made to check if something is or isnt a titlebar, leading to inconsistent and wrong results.
border_radius 12
# set where to draw the rounded corners, multiple options allowed
#   - all
#   - top
#   - bottom
#   - right
#   - left
#   - top-right
#   - top-left
#   - bottom-right
#   - bottom-left
# note: options other then all currently dont work well
border_radius_location all
# example
# border_radius_location top_left bottom_right

# colors in the rgba format
inactive_border_color 49 50 68 255
active_border_color 137 180 250 255

# you can override these per app using window rules; see below
inactive_opacity 0.92
active_opacity 0.92

# blur
blur 1
blur_passes 3
blur_radius 5
blur_noise 0.02
blur_brightness 0.9
blur_contrast 0.9
blur_saturation 1.1

# shadows
shadows 1
shadows_blur 15
shadows_size 12
# shadow is going to be places evenly around toplevels by default, but you can place it relative to its toplevel
# example 1: at the origin, this makes the shadow appear only on the right and bottom
shadows_position 0 0
# example 2: translated 48 pixels to the right and 48 pixels up
# shadows_position 48 -48
shadows_color 0 0 0 255

# you can specify how many master toplevels you want, especially useful for wide monitors
master_count 1
# you can specify how much space will masters take;
# setting it to 0 or skipping it will space all tiled toplevel evenly
master_ratio 0.6

# .------------.
# | ANIMATIONS |
# '------------'
# enable animations
animations 1
animation_duration 500
# cubic bezier curve to use for the animation; you should use sane values here
animation_curve 0.05 0.9 0.1 1.05

# if animations are used this color is used to fill in when the toplevels buffer
# can not fill the current size; recommended to fit this color in with your theme
placeholder_color 30 30 46 255

# .----------.
# | KEYBINDS |
# '----------'
# keybinds are done in this form
# keybind <modifiers> <key> <action> ...args
# actions are
#   exit - quits notwc
#   workspace <index> - go to workspace index
#   move_to_workspace <index> - move focused toplevel to workspace index
#   run <command> - run command 
#   resize - start resizing focused toplevel (only for floating toplevels)
#   move - start move focused toplevel (only for floating toplevels)
#   move_focus <direction> - move focus to another toplevel in direction
#   swap <direction> - swap toplevel in direction
#   kill_active - kill focused toplevel
#   switch_floating_state - switch floating state of the focused toplevel
# special key names you can use are 
#   enter
#   backspace
#   delete
#   tab
#   up, down, left, right
#   mouse_left_click, mouse_right_click, mouse_middle_click
# other keys you are supposed to use with their xkb name

keybind super escape exit

# cycle workspaces 
keybind alt n next_workspace 
keybind alt p prev_workspace

keybind alt 1 workspace 1
keybind alt 2 workspace 2
keybind alt 3 workspace 3
keybind alt 4 workspace 4
keybind alt 5 workspace 5
keybind alt 6 workspace 6
keybind alt 7 workspace 7
keybind alt 8 workspace 8
keybind alt 9 workspace 9
keybind alt 0 workspace 10

keybind alt+shift 1 move_to_workspace 1
keybind alt+shift 2 move_to_workspace 2
keybind alt+shift 3 move_to_workspace 3
keybind alt+shift 4 move_to_workspace 4
keybind alt+shift 5 move_to_workspace 5
keybind alt+shift 6 move_to_workspace 6
keybind alt+shift 7 move_to_workspace 7
keybind alt+shift 8 move_to_workspace 8
keybind alt+shift 9 move_to_workspace 9
keybind alt+shift 0 move_to_workspace 10

keybind alt t run foot
keybind alt a run "killall rofi || rofi -show \"drun\""
keybind alt f run firefox
keybind alt e run "foot yazi"

keybind alt b run "$HOME/scripts/change_wallpaper.sh"
keybind alt o run "$HOME/scripts/screenshot.sh"

keybind alt x resize
keybind alt z move

keybind alt k move_focus up 
keybind alt j move_focus down 
keybind alt l move_focus right 
keybind alt h move_focus left 

# use + for multiple modifiers
keybind alt+shift k swap up 
keybind alt+shift j swap down 
keybind alt+shift l swap right 
keybind alt+shift h swap left 

keybind alt q kill_active 
keybind alt w switch_floating_state 

# use _ for no modifiers (you can actually put anything there and it will work)
keybind _ XF86MonBrightnessUp run "light -A 5"
keybind _ XF86MonBrightnessDown run "light -U 5"

keybind _ XF86AudioRaiseVolume run "pactl set-sink-volume 0 +5%"
keybind _ XF86AudioLowerVolume run "pactl set-sink-volume 0 -5%"

keybind alt equal run "pactl set-sink-volume 0 +5%"
keybind alt minus run "pactl set-sink-volume 0 -5%"

keybind _ XF86AudioMute run "pactl set-sink-mute 0 toggle"
keybind _ XF86AudioMicMute run "pactl set-source-mute 0 toggle"

keybind alt backspace run "killall rofi || $HOME/scripts/leave.sh"
keybind alt period run "(pidof wlsunset && killall wlsunset) || wlsunset"

# you can bind mouse buttons for shortcuts by prefixing them with pointer_
# (mouse_ also works for backwards compatibility reason) followed by
#   - left_click
#   - right_click
#   - middle_click
# or a number that represents that pointer button (you can get it by running `wev` and reading the logs)
# e.g. left click is usually 272 (that is what notwc assumes and replaces left_click with)
keybind alt pointer_left_click move
keybind alt pointer_right_click resize

# .--------------.
# | WINDOW RULES |
# '--------------'
# window rules are done with
# window_rule <app_id regex> <title regex> <predicate> ...args
# predicate can be 
#   float - to float by default
#   size <width> <height> - to be specific size (only if floating);
#                           sizes can either be absolute or relative
#   opacity <active_value> <inactive_value> - opacity to use for this toplevel; if you wish to use the same value
#                                             for both active and inacitive state you can put just one value here
# note: you can use _ to ignore class/title
window_rule imv _ float 
window_rule imv size _ 80% 80%

window_rule nwg-look _ float 
window_rule nwg-look _ size 1024 576

window_rule kvantummanager _ float 
window_rule kvantummanager _ size 1024 576

window_rule org.pulseaudio.pavucontrol _ float 
window_rule org.pulseaudio.pavucontrol _ size 1024 576

window_rule blueman-manager _ float 
window_rule blueman-manager _ size 1024 576

window_rule nm-connection-editor _ float 
window_rule nm-connection-editor _ size 1024 576

window_rule firefox Library float 
window_rule firefox Library size 1024 576

# set opacity rules; later matches override previous ones
# e.g. if you want firefox to be transperent, except when youtube is playing do
window_rule firefox .*YouTube.* opacity 1

